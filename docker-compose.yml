services:
  backend:
    build: ./backend
    command: flask run --host=0.0.0.0 --port=5000
    volumes:
      - ./backend:/usr/src/app
    ports:
      - "5001:5000"
    env_file:
      - ./.env
    environment:
      - PYTHONPATH=.
    depends_on:
      - db
      - broker
    networks:
      - app_network   

  db:
    image: postgres:18.0-alpine3.22
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - app_network   

  broker:
    image: redis:alpine3.22
    ports:
      - "6379:6379"
    networks:
      - app_network   

  worker:
    build: ./backend
    command: celery -A celery_worker.celery worker --loglevel=info
    volumes:
      - ./backend:/usr/src/app
    env_file:
      - ./.env
    depends_on:
      - broker
      - db
      - ollama       
    networks:
      - app_network   

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3001:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app_network   

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    #command: ollama run qwen3:0.6b --host 0.0.0.0 --port 11435
    ports:
      - "11435:11434"
    volumes:
      - ollama_data:/root/.ollama 
    restart: unless-stopped
    networks:
      - app_network   

volumes:
  postgres_data:
  ollama_data:

networks:
  app_network:
    driver: bridge
